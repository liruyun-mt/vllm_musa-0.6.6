import os
from setuptools import setup, find_packages
from torch_musa.utils.simple_porting import SimplePorting
from torch_musa.utils.musa_extension import MUSAExtension

SimplePorting(cuda_dir_path="./csrc", mapping_rule={
    "x.device().is_cuda()": "true",
    "#include <ATen/cuda/CUDAContext.h>": "#include \"torch_musa/csrc/aten/musa/MUSAContext.h\"",
    "#include <c10/cuda/CUDAGuard.h>": "#include \"torch_musa/csrc/core/MUSAGuard.h\"",
    "#include <ATen/cuda/Exceptions.h>": "#include \"torch_musa/csrc/core/MUSAException.h\"",
    "#include <c10/cuda/CUDAStream.h>": "#include \"torch_musa/csrc/core/MUSAStream.h\"",
    "at::kCUDA": "at::musa::kMUSA",
    "at::cuda::getCurrentCUDAStream()": "at::musa::getCurrentMUSAStream()",
    "__nv_bfloat16": "__mt_bfloat16",
    "at::cuda::OptionalCUDAGuard": "at::musa::OptionalMUSAGuard",
    "at::cuda::getCurrentCUDABlasHandle()": "at::musa::getCurrentMUSABlasHandle()",
    "ATen/cuda/CUDATensorMethods.cuh": "ATen/musa/MUSA_PORT_TensorMethods.muh",
    "#include \"attention_generic.cuh\"": "#include \"attention_generic.muh\"",
    "#include \"reduction_utils.cuh\"": "#include \"reduction_utils.muh\"",
    "#include <THC/THCAtomics.cuh>": "#include <THC/THCAtomics.muh>",
    "#include \"dtype_float16.cuh\"": "#include \"dtype_float16.muh\"",
    "#include \"dtype_float32.cuh\"": "#include \"dtype_float32.muh\"",
    "#include \"custom_all_reduce.cuh\"": "#include \"custom_all_reduce.muh\"",
    "#include \"dtype_bfloat16.cuh\"": "#include \"dtype_bfloat16.muh\"",
    "#include \"dtype_fp8.cuh\"": "#include \"dtype_fp8.muh\"",
    "#include \"util_type.cuh\"": "#include \"util_type.muh\"",
    "#include \"attention_utils.cuh\"": "#include \"attention_utils.muh\"",
    "#include \"cub.cuh\"": "#include \"cub.muh\"",
    "#include \"vecdotq.cuh\"": "#include \"vecdotq.muh\"",
    "#include \"dequantize.cuh\"": "#include \"dequantize.muh\"",
    "#include \"mmvq.cuh\"": "#include \"mmvq.muh\"",
    "#include \"mmq.cuh\"": "#include \"MMQ.muh\"",
    "#include \"scaled_mm_c3x.cuh\"": "#include \"scaled_mm_c3x.muh\"",
    "#include \"scaled_mm_c3x_sm90_fp8_dispatch.cuh\"": "#include \"scaled_mm_c3x_sm90_fp8_dispatch.muh\"",
    "#include \"scaled_mm_c3x_sm90_int8_dispatch.cuh\"": "#include \"scaled_mm_c3x_sm90_int8_dispatch.muh\"",
    "#include \"scaled_mm_c2x.cuh\"": "#include \"scaled_mm_c2x.muh\"",
    "#include \"scaled_mm_c2x_sm75_dispatch.cuh\"": "#include \"scaled_mm_c2x_sm75_dispatch.muh\"",
    "#include \"scaled_mm_c2x_sm80_dispatch.cuh\"": "#include \"scaled_mm_c2x_sm80_dispatch.muh\"",
    "#include \"scaled_mm_c2x_sm89_fp8_dispatch.cuh\"": "#include \"scaled_mm_c2x_sm89_fp8_dispatch.muh\"",

    "#include \"marlin.cuh\"": "#include \"marlin.muh\"",
    "#include \"marlin_dtypes.cuh\"": "#include \"marlin_dtypes.muh\"",
    "#include \"machete_mm_launcher.cuh\"": "#include \"machete_mm_launcher.muh\"",
    "#include \"machete_prepack_launcher.cuh\"": "#include \"machete_prepack_launcher.muh\"",
    "#include \"mmq.cuh\"": "#include \"MMQ.muh\"",
    "#include \"cute_utils.cuh\"": "#include \"cute_utils.muh\"",
    "#include \"machete_collective_builder.cuh\"": "#include \"machete_collective_builder.muh\"",
    "#include \"machete_interleaving_utils.cuh\"": "#include \"machete_interleaving_utils.muh\"",
    "#include \"vllm_numeric_conversion.cuh\"": "#include \"vllm_numeric_conversion.muh\"",
    "#include \"vllm_collective_builder.cuh\"": "#include \"vllm_collective_builder.muh\"",

    "#include \"machete_prepacked_layout.cuh\"": "#include \"machete_prepacked_layout.muh\"",
    "#include \"machete_prepack_kernel.cuh\"": "#include \"machete_prepack_kernel.muh\"",


    "#include \"machete_mainloop.cuh\"": "#include \"machete_mainloop.muh\"",
    "#include \"machete_mm_launcher.cuh\"": "#include \"machete_mm_launcher.muh\"",
    "#include \"qdq_util.cuh\"": "#include \"qdq_util.muh\"",
    "#include \"block_load.cuh\"": "#include \"block_load.muh\"",
    "#include \"block_store.cuh\"": "#include \"block_store.muh\"",
    "#include \"block_scan.cuh\"": "#include \"block_scan.muh\"",
    "#include \"advance_step.cuh\"": "#include \"advance_step.muh\"",
    "#include \"sparse_scaled_mm_c3x.cuh\"": "#include \"sparse_scaled_mm_c3x.muh\"",
    "#include \"attention_kernels.cuh\"": "#include \"attention_kernels.muh\"",
    "#include \"common.cuh\"": "#include \"common.muh\"",
    "#include \"quant_utils.cuh\"": "#include \"quant_utils.muh\"",


    "cuPointerGetAttribute": "muPointerGetAttribute",
    "CUdeviceptr": "MUdeviceptr",
    "CUDA_SUCCESS": "MUSA_SUCCESS",
    "CU_POINTER_ATTRIBUTE_RANGE_START_ADDR": "MU_POINTER_ATTRIBUTE_RANGE_START_ADDR",
    "c10::cuda": "c10::musa",
    "cudaStreamIsCapturing": "at::musa::musaStreamIsCapturing",
    "AT_CUDA_CHECK": "C10_MUSA_CHECK",
    "nv_bfloat16": "mt_bfloat16",
    "struct __align__(16) RankData { const void *__restrict__ ptrs[8]; };":"struct __align__(16) RankData { const void *__restrict__ ptrs[8]; RankData& operator=(const RankData& ){return *this;} };"
    }).run()